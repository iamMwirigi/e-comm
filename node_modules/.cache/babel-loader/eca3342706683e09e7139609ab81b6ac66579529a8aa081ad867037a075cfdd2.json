{"ast":null,"code":"var _jsxFileName = \"/home/mwirigi/mwirigi/e-comm/src/Components/Breadcrums/Breadcrum.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './Breadcrum.css';\nimport { Link, useLocation } from 'react-router-dom';\nimport arrow_icon from '../Assets/breadcrum_arrow.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Breadcrum = props => {\n  _s();\n  const {\n    product\n  } = props;\n  const location = useLocation();\n\n  // Capitalize strings for display\n  const capitalize = str => {\n    if (!str) return '';\n    return str.charAt(0).toUpperCase() + str.slice(1).toLowerCase();\n  };\n\n  // Case 1: Product prop is provided and valid\n  if (product && product.category && product.name) {\n    const categoryPath = String(product.category).toLowerCase();\n    const categoryDisplay = String(product.category).toUpperCase();\n    const nameDisplay = String(product.name).toUpperCase();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"breadcrum\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"HOME\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"img\", {\n        src: arrow_icon,\n        alt: \"arrow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 42\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/shop\",\n        children: \"SHOP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"img\", {\n        src: arrow_icon,\n        alt: \"arrow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 46\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/${categoryPath}`,\n        children: categoryDisplay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: arrow_icon,\n        alt: \"arrow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), \" \", nameDisplay]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this);\n  }\n\n  // Case 2: Fallback to URL parsing if product prop is not fully valid\n  // Also check if pathname is not just '/' to avoid showing \"Home\" twice\n  const isHomepage = location.pathname === '/';\n  if (!product && !isHomepage) {\n    // Fallback to URL parsing *only if not on homepage and product is missing*\n    const pathnames = location.pathname.split('/').filter(x => x); // e.g., ['', 'mens', 'shirt'] -> ['mens', 'shirt']\n    let breadcrumbPathElements = [];\n    if (pathnames.length === 0) {\n      // No path segments after '/', but we're not on homepage - should not happen, or you can handle differently.\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"breadcrum\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 20\n      }, this); // Or null/empty div\n    }\n\n    // Always start with HOME if not on the homepage\n    breadcrumbPathElements.push( /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: \"HOME\"\n    }, \"home\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 37\n    }, this));\n    if (location.pathname !== '/') {\n      // For all pages other than '/'\n      breadcrumbPathElements.push( /*#__PURE__*/_jsxDEV(\"img\", {\n        src: arrow_icon,\n        alt: \"arrow\"\n      }, \"arrow-0\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 41\n      }, this)); // Arrow after \"HOME\"\n    }\n    if (pathnames.length > 0) {\n      // Then build the rest of the trail\n      pathnames.forEach((name, index) => {\n        const routeTo = `/${pathnames.slice(0, index + 1).join('/')}`;\n        // Replace hyphens with spaces and capitalize each word for display\n        const displayName = name.replace(/-/g, ' ').split(' ').map(capitalize).join(' ');\n        breadcrumbPathElements.push( /*#__PURE__*/_jsxDEV(\"img\", {\n          src: arrow_icon,\n          alt: \"arrow\"\n        }, `arrow-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 45\n        }, this));\n        if (index === pathnames.length - 1) {\n          // Last item in path is not a link\n          breadcrumbPathElements.push( /*#__PURE__*/_jsxDEV(\"span\", {\n            children: displayName\n          }, name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 49\n          }, this));\n        } else {\n          breadcrumbPathElements.push( /*#__PURE__*/_jsxDEV(Link, {\n            to: routeTo,\n            children: displayName\n          }, name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 49\n          }, this));\n        }\n      });\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"breadcrum\",\n      children: breadcrumbPathElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 16\n    }, this);\n  }\n\n  // If we reach here, it means either no path segments, or we are on the homepage after some segment removals,\n  // or potentially after all segments are parsed and only \"Home > \" exists because of the check location.pathname !== '/' above.\n  // Return nothing (you might adjust to return something like \"Home\" or handle differently)\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"breadcrum\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 12\n  }, this);\n};\n_s(Breadcrum, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c = Breadcrum;\nexport default Breadcrum;\nvar _c;\n$RefreshReg$(_c, \"Breadcrum\");","map":{"version":3,"names":["React","Link","useLocation","arrow_icon","jsxDEV","_jsxDEV","Breadcrum","props","_s","product","location","capitalize","str","charAt","toUpperCase","slice","toLowerCase","category","name","categoryPath","String","categoryDisplay","nameDisplay","className","children","to","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","isHomepage","pathname","pathnames","split","filter","x","breadcrumbPathElements","length","push","forEach","index","routeTo","join","displayName","replace","map","_c","$RefreshReg$"],"sources":["/home/mwirigi/mwirigi/e-comm/src/Components/Breadcrums/Breadcrum.jsx"],"sourcesContent":["import React from 'react';\nimport './Breadcrum.css';\nimport { Link, useLocation } from 'react-router-dom';\nimport arrow_icon from '../Assets/breadcrum_arrow.png';\n\nconst Breadcrum = (props) => {\n    const { product } = props;\n    const location = useLocation();\n\n    // Capitalize strings for display\n    const capitalize = (str) => {\n        if (!str) return '';\n        return str.charAt(0).toUpperCase() + str.slice(1).toLowerCase();\n    };\n\n    // Case 1: Product prop is provided and valid\n    if (product && product.category && product.name) {\n        const categoryPath = String(product.category).toLowerCase();\n        const categoryDisplay = String(product.category).toUpperCase();\n        const nameDisplay = String(product.name).toUpperCase();\n\n        return (\n            <div className='breadcrum'>\n                <Link to=\"/\">HOME</Link> <img src={arrow_icon} alt=\"arrow\" />\n                <Link to=\"/shop\">SHOP</Link> <img src={arrow_icon} alt=\"arrow\" />\n                <Link to={`/${categoryPath}`}>{categoryDisplay}</Link>\n                <img src={arrow_icon} alt=\"arrow\" /> {nameDisplay}\n            </div>\n        );\n    }\n\n    // Case 2: Fallback to URL parsing if product prop is not fully valid\n    // Also check if pathname is not just '/' to avoid showing \"Home\" twice\n    const isHomepage = location.pathname === '/';\n\n    if (!product && !isHomepage) {\n        // Fallback to URL parsing *only if not on homepage and product is missing*\n        const pathnames = location.pathname.split('/').filter(x => x); // e.g., ['', 'mens', 'shirt'] -> ['mens', 'shirt']\n        let breadcrumbPathElements = [];\n\n        if (pathnames.length === 0) {\n            // No path segments after '/', but we're not on homepage - should not happen, or you can handle differently.\n            return <div className=\"breadcrum\"></div>;  // Or null/empty div\n        }\n\n        // Always start with HOME if not on the homepage\n        breadcrumbPathElements.push(<Link key=\"home\" to=\"/\">HOME</Link>);\n\n        if (location.pathname !== '/') { // For all pages other than '/'\n            breadcrumbPathElements.push(<img key=\"arrow-0\" src={arrow_icon} alt=\"arrow\" />); // Arrow after \"HOME\"\n        }\n        \n        if (pathnames.length > 0) { // Then build the rest of the trail\n            pathnames.forEach((name, index) => {\n                const routeTo = `/${pathnames.slice(0, index + 1).join('/')}`;\n                // Replace hyphens with spaces and capitalize each word for display\n                const displayName = name.replace(/-/g, ' ').split(' ').map(capitalize).join(' ');\n                \n                breadcrumbPathElements.push(<img key={`arrow-${index}`} src={arrow_icon} alt=\"arrow\" />);\n                if (index === pathnames.length - 1) { // Last item in path is not a link\n                    breadcrumbPathElements.push(<span key={name}>{displayName}</span>);\n                } else {\n                    breadcrumbPathElements.push(<Link key={name} to={routeTo}>{displayName}</Link>);\n                }\n            });\n        }\n\n        return <div className='breadcrum'>{breadcrumbPathElements}</div>;\n    }\n\n    // If we reach here, it means either no path segments, or we are on the homepage after some segment removals,\n    // or potentially after all segments are parsed and only \"Home > \" exists because of the check location.pathname !== '/' above.\n    // Return nothing (you might adjust to return something like \"Home\" or handle differently)\n    return <div className='breadcrum'></div>;\n};\n\nexport default Breadcrum;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}